@using DisplayMonkey
@using DisplayMonkey.Models
@using DisplayMonkey.Language

@model IEnumerable<DisplayMonkey.Models.Setting>

@{
    ViewBag.Title = Resources.ApplicationSettings;
}

<h2>@ViewBag.Title</h2>

<table class="grid">

@foreach (var item in Model) {
    <tr>
        <td class="nw">
            @Html.DisplayFor(m => item.Name)
        </td>
        <td>
            @switch (item.Type)
            {
                case SettingTypes.SettingType_IntPositive:
                    <div class="num">@Html.DisplayFor(m => item.IntValuePositive)</div>
                    break;
                    
                case SettingTypes.SettingType_String:
                    @Html.DisplayFor(m => item.StringValue)
                    break;
                    
                default:
                    @Html.DisplayFor(m => item.Value)
                    break;
            }
        </td>
        <td>
            @Html.ActionLink(Resources.Edit, "Edit", new { id=item.Key })
        </td>
    </tr>
}

</table>
